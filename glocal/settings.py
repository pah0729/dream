"""
Django settings for glocal project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

from django.contrib.messages import constants as messages
import os
from .secret import safe_get
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = safe_get('key')

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = safe_get('debug', False)

# ALLOWED_HOSTS = safe_get('ALLOWED_HOSTS')
ALLOWED_HOSTS = ['*']

SITE_ID = 1

# Application definition

INSTALLED_APPS = safe_get('apps', [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    # lib
    'adminsortable2',
    'bootstrap4',
    'multiselectfield',
    'ckeditor',
    'ckeditor_uploader',
    'debug_toolbar',
    # custom app
    'accounts',
    'annual',
    'commute',
    'home',
    'notice',
    'todo_list',
    'project',
    'jobReport'
])

# github webhook key
GITHUB_WEBHOOK_KEY = safe_get('GITHUB_WEBHOOK_KEY')

# 이메일
EMAIL_BACKEND = safe_get('EMAIL_BACKEND')
EMAIL_USE_TLS = safe_get('EMAIL_USE_TLS')
EMAIL_HOST = safe_get('EMAIL_HOST')
EMAIL_PORT = safe_get('EMAIL_PORT')
EMAIL_HOST_USER = safe_get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = safe_get('EMAIL_HOST_PASSWORD')
SERVER_EMAIL = safe_get('SERVER_EMAIL')
DEFAULT_FROM_MAIL = safe_get('DEFAULT_FROM_MAIL')

MIDDLEWARE = safe_get('middleware', [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    # 'glocal.csrfexempt.DisableCSRF'
])

ROOT_URLCONF = 'glocal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'home.context_processors.config',
            ],
        },
    },
]

WSGI_APPLICATION = 'glocal.wsgi.application'

SESSION_COOKIE_AGE = 36000
SESSION_SAVE_EVERY_REQUEST = True
# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = safe_get("DATABASES", {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
})

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'ko-KR'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'statics')

"""
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),]
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)
"""

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# CKEditor

CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"
CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_JQUERY_URL = 'https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js'

# Login URL

LOGIN_URL = '/login'
LOGOUT_REDIRECT_URL = '/login'

# Messages Tag setting

MESSAGE_TAGS = {
    messages.DEBUG: 'question',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'error',
}

# cellery redis setting
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'

""" django debug toolbar 임시적으로 모든이들에게 """

# DEBUG_TOOLBAR_PATCH_SETTINGS = False
# def custom_show_toolbar(request):
#     return True # Always show toolbar, for example purposes only.

# DEBUG_TOOLBAR_CONFIG = {
#     'SHOW_TOOLBAR_CALLBACK': custom_show_toolbar,
# }

# # django-debug-toolbar
# INTERNAL_IPS = [
#     # ...
#     '127.0.0.1',
#     # ...
# ]

CSRF_COOKIE_SECURE = True
